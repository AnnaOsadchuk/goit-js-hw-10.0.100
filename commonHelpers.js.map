{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["/* import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\n\nconst refs = {\n  inputEl: document.getElementById('datetime-picker'),\n  startBtn: document.querySelector('button[data-start]'),\n  pickerTimer: document.querySelector('.timer'),\n  days: document.querySelector('span[data-days]'),\n  huurs: document.querySelector('span[data-hours]'),\n  minutes: document.querySelector('span[data-minutes]'),\n  seconds: document.querySelector('span[data-seconds]'),\n};\n\nlet userSelectedDate = new Date();\nlet currentDate = new Date();\n\nconst options = {\n  time_24hr: true,\n  defaultDate: currentDate,\n  disableMobile: 'true',\n  minuteIncrement: 1,\n  enableTime: true,\n  dateFormat: 'Y-m-d H:i',\n  onClose(selectedDates) {\n    userSelectedDate = selectedDates[0];\n     if (userSelectedDate <= currentDate) {\n      window.alert('Please choose a date in the future');\n    }\n    refs.startBtn.removeAttribute('disabled');\n    console.log(userSelectedDate);\n  },\n};\n\nflatpickr(refs.inputEl, options);\nbuttonEl.addEventListener('click', startCounter);\n\nfunction startCounter() {\n  if (userSelectedDate > currentDate) {\n    buttonEl.disabled = true;\n    const timerId = setInterval(() => {\n      currentDate = new Date();\n      const diff = convertMs(userSelectedDate - currentDate);\n      if (userSelectedDate > currentDate) {\n        setCounterFields(diff);\n      } else {\n        clearInterval(timerId);\n      }\n    }, 1000);\n  }\n}\n\nfunction setCounterFields(diff) {\n  days.textContent = addLeadingZero(diff.days);\n  hours.textContent = addLeadingZero(diff.hours);\n  minutes.textContent = addLeadingZero(diff.minutes);\n  seconds.textContent = addLeadingZero(diff.seconds);\n}\n\nfunction addLeadingZero(value) {\n  return value.toString().padStart(2, '0');\n}\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\nconsole.log(convertMs(2000)); // {days: 0, hours: 0, minutes: 0, seconds: 2}\nconsole.log(convertMs(140000)); // {days: 0, hours: 0, minutes: 2, seconds: 20}\nconsole.log(convertMs(24140000)); // {days: 0, hours: 6 minutes: 42, seconds: 20}\n\n */\n\n\nimport flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\n/* import { Notify } from 'notiflix/build/notiflix-notify-aio'; */\n\nconst buttonEl = document.querySelector('button[data-start]');\nconst inputEl = document.getElementById('datetime-picker');\nconst days = document.querySelector('span[data-days]');\nconst hours = document.querySelector('span[data-hours]');\nconst minutes = document.querySelector('span[data-minutes]');\nconst seconds = document.querySelector('span[data-seconds]');\n\nlet currentDate = new Date();\nlet targetDate = new Date();\n\nconst options = {\n  enableTime: true,\n  dateFormat: 'Y-m-d H:i',\n  defaultDate: currentDate,\n  onClose(selectedDates) {\n    targetDate = selectedDates[0];\n    if (targetDate < currentDate) {\n      const message = 'Please choose a date in the future';\n      Notify.failure(message);\n    } else {\n      buttonEl.removeAttribute('disabled');\n    }\n  },\n};\n\nflatpickr(inputEl, options);\nbuttonEl.addEventListener('click', startCounter);\n\nfunction startCounter() {\n  if (targetDate > currentDate) {\n    buttonEl.disabled = true;\n    const timerId = setInterval(() => {\n      currentDate = new Date();\n      const diff = convertMs(targetDate - currentDate);\n      if (targetDate > currentDate) {\n        setCounterFields(diff);\n      } else {\n        clearInterval(timerId);\n      }\n    }, 1000);\n  }\n}\n\nfunction setCounterFields(diff) {\n  days.textContent = addLeadingZero(diff.days);\n  hours.textContent = addLeadingZero(diff.hours);\n  minutes.textContent = addLeadingZero(diff.minutes);\n  seconds.textContent = addLeadingZero(diff.seconds);\n}\n\nfunction addLeadingZero(value) {\n  return value.toString().padStart(2, '0');\n}\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nconsole.log(convertMs(2000)); // {days: 0, hours: 0, minutes: 0, seconds: 2}\nconsole.log(convertMs(140000)); // {days: 0, hours: 0, minutes: 2, seconds: 20}\nconsole.log(convertMs(24140000)); // {days: 0, hours: 6 minutes: 42, seconds: 20}"],"names":["buttonEl","inputEl","days","hours","minutes","seconds","currentDate","targetDate","options","selectedDates","message","flatpickr","startCounter","timerId","diff","convertMs","setCounterFields","addLeadingZero","value","ms"],"mappings":"oFA2FA,MAAMA,EAAW,SAAS,cAAc,oBAAoB,EACtDC,EAAU,SAAS,eAAe,iBAAiB,EACnDC,EAAO,SAAS,cAAc,iBAAiB,EAC/CC,EAAQ,SAAS,cAAc,kBAAkB,EACjDC,EAAU,SAAS,cAAc,oBAAoB,EACrDC,EAAU,SAAS,cAAc,oBAAoB,EAE3D,IAAIC,EAAc,IAAI,KAClBC,EAAa,IAAI,KAErB,MAAMC,EAAU,CACd,WAAY,GACZ,WAAY,YACZ,YAAaF,EACb,QAAQG,EAAe,CAErB,GADAF,EAAaE,EAAc,CAAC,EACxBF,EAAaD,EAAa,CAC5B,MAAMI,EAAU,qCAChB,OAAO,QAAQA,CAAO,CAC5B,MACMV,EAAS,gBAAgB,UAAU,CAEtC,CACH,EAEAW,EAAUV,EAASO,CAAO,EAC1BR,EAAS,iBAAiB,QAASY,CAAY,EAE/C,SAASA,GAAe,CACtB,GAAIL,EAAaD,EAAa,CAC5BN,EAAS,SAAW,GACpB,MAAMa,EAAU,YAAY,IAAM,CAChCP,EAAc,IAAI,KAClB,MAAMQ,EAAOC,EAAUR,EAAaD,CAAW,EAC3CC,EAAaD,EACfU,EAAiBF,CAAI,EAErB,cAAcD,CAAO,CAExB,EAAE,GAAI,CACR,CACH,CAEA,SAASG,EAAiBF,EAAM,CAC9BZ,EAAK,YAAce,EAAeH,EAAK,IAAI,EAC3CX,EAAM,YAAcc,EAAeH,EAAK,KAAK,EAC7CV,EAAQ,YAAca,EAAeH,EAAK,OAAO,EACjDT,EAAQ,YAAcY,EAAeH,EAAK,OAAO,CACnD,CAEA,SAASG,EAAeC,EAAO,CAC7B,OAAOA,EAAM,SAAU,EAAC,SAAS,EAAG,GAAG,CACzC,CAEA,SAASH,EAAUI,EAAI,CAQrB,MAAMjB,EAAO,KAAK,MAAMiB,EAAK,KAAG,EAE1BhB,EAAQ,KAAK,MAAOgB,EAAK,MAAO,IAAI,EAEpCf,EAAU,KAAK,MAAQe,EAAK,MAAO,KAAQ,GAAM,EAEjDd,EAAU,KAAK,MAASc,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAjB,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,QAAQ,IAAIU,EAAU,GAAI,CAAC,EAC3B,QAAQ,IAAIA,EAAU,IAAM,CAAC,EAC7B,QAAQ,IAAIA,EAAU,MAAQ,CAAC"}